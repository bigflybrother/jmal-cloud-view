user  nginx;
worker_processes  1;

error_log  /usr/local/nginx/logs/error.log warn;
pid        /usr/local/nginx/logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    include       /usr/local/nginx/conf/mime.types;
    default_type  application/octet-stream;

    rewrite_log on;

    underscores_in_headers on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/nginx/logs/access.log  main;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 6;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        proxy_intercept_errors on;
        fastcgi_intercept_errors on;

        location /api/webDAV/ {
            client_max_body_size 5G;
            proxy_pass API_SERVER_URL/webDAV/;
            proxy_set_header Host $proxy_host;
            proxy_set_header X-real-ip $remote_addr;
            client_body_temp_path /tmp;
            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
            create_full_put_path on;
        }
        
        location /api/ {
            proxy_pass API_SERVER_URL;
                proxy_set_header Host $proxy_host;
                proxy_set_header X-real-ip $remote_addr;
                client_body_temp_path /tmp;
                dav_methods PUT DELETE MKCOL COPY MOVE;
                create_full_put_path on;
        }

        location / {
            root   /usr/local/nginx/html;
            try_files $uri $uri/ /index.html =404;
        }

        location /mq/ {
            proxy_pass   API_SERVER_URL;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_connect_timeout 60s;
            proxy_read_timeout 500s;
            proxy_send_timeout 500s;
        }

        location ~* .(css|js)$ {
            root   /usr/local/nginx/html;
            try_files $uri $uri/ /index.html =404;
            expires 365d;
        }
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   /usr/share/nginx/html;
        #}
        location = /basic_status {
            stub_status;
        }

        location = /ping {
            add_header Content-Type "text/plain;charset=utf-8";
            return 200 "pong";
        }
    }
}
